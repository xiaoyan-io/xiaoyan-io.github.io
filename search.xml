<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>1Panel 部署 爱影CMS</title>
      <link href="/2024/10/24/1Panel-%E9%83%A8%E7%BD%B2-%E7%88%B1%E5%BD%B1CMS/"/>
      <url>/2024/10/24/1Panel-%E9%83%A8%E7%BD%B2-%E7%88%B1%E5%BD%B1CMS/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>本文以 爱影CMS 为例提供了一种在 1Panel 面板中在 docker 内运行二进制程序的一种思路。符合 1Panel 基于容器管理并部署应用，实现最小的漏洞暴露面的思路。</p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ul><li>完整的 1Panel 环境（<a href="https://1panel.cn/docs/installation/online_installation/">1Panel 如何安装？</a> &#x2F; <a href="https://www.lxware.cn/?code=KObNbIjs">1Panel Pro 优惠购</a>)</li><li>服务器一台（<a href="https://curl.qcloud.com/UWcDkPN9">腾讯云特惠</a> &#x2F; <a href="https://www.aliyun.com/minisite/goods?userCode=td6jqc1c">阿里云特惠</a> &#x2F; <a href="https://www.rainyun.com/Anyexyz_">雨云特惠</a>）</li><li>基础的服务器运维能力</li></ul><h3 id="获取最新版爱影CMS"><a href="#获取最新版爱影CMS" class="headerlink" title="获取最新版爱影CMS"></a>获取最新版爱影CMS</h3><p><a href="https://www.iycms.com/download/index.html">官方下载地址</a><br>在该页面上我们找到下载按钮，选择适合自己的服务器架构的压缩包<br><img src="https://api.smain.cn/pics/pic_3e74cbc0.png" alt="pic_3e74cbc0.png"></p><h3 id="容器化运行"><a href="#容器化运行" class="headerlink" title="容器化运行"></a>容器化运行</h3><ol><li><p>进入 1Panel 管理面板，左侧导航栏点击 <code>容器</code> - <code>编排</code> - 文件夹按钮（<a href="https://www.lxware.cn/?code=KObNbIjs">嘿这个VIP黑金你真的不爱吗🤣 </a>）<br><img src="https://api.smain.cn/pics/pic_a079585c.png" alt="pic_a079585c.png"></p></li><li><p>创建容器运行目录：在该目录下创建文件夹 <code>cms</code> 用于存放容器持久化数据以及 <code>docker-compose.yml</code> 等文件<img src="https://api.smain.cn/pics/pic_25e20cfb.png" alt="pic_25e20cfb.png"></p></li><li><p>创建 <code>docker-compose.yml</code> 和 <code>Dockerfile</code> 文件，参考如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Dockerfile</span><br><span class="line">FROM alpine:latest</span><br><span class="line">WORKDIR /app</span><br><span class="line">COPY . /app</span><br><span class="line">EXPOSE <span class="number">21007</span></span><br><span class="line">RUN chmod +x /app/cms</span><br><span class="line">CMD [<span class="string">&quot;/app/cms&quot;</span>]</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># docker-compose.yml</span><br><span class="line">services:</span><br><span class="line">  cms:</span><br><span class="line">    container_name: iycms</span><br><span class="line">    build: .</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;127.0.0.1:21007:21007&quot;</span># 后台管理端口</span><br><span class="line">      - <span class="string">&quot;127.0.0.1:21006:80&quot;</span># 站点端口</span><br><span class="line">    volumes:</span><br><span class="line">      - .:/app# 持久化</span><br><span class="line">    restart: always</span><br><span class="line">    networks:</span><br><span class="line">      - 1panel-network# 使用 1Panel 创建的 docker 网络</span><br><span class="line">networks:</span><br><span class="line">  1panel-network:</span><br><span class="line">    external: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>记住此处的 <code>docker-compose.yml</code> 的路径，如此处：<code>/opt/1panel/docker/compose/cms/docker-compose.yml</code><br><img src="https://api.smain.cn/pics/pic_810892d6.png" alt="pic_810892d6.png"></p></li><li><p>拷贝运行文件<br>将下载的爱影CMS安装包放入当前目录下，解压获得 CMS 二进制文件和 HTML 主题文件夹，如图<br><img src="https://api.smain.cn/pics/pic_f3de42ae.png" alt="pic_f3de42ae.png"></p></li><li><p>构建运行容器<br>左侧导航栏点击 <code>容器</code> - <code>编排</code> - <code>创建编排</code> - <code>路径选择</code> 粘贴刚才复制的 <code>docker-compose.yml</code> 路径，确认构建容器。<br><img src="https://api.smain.cn/pics/pic_d55fcdcb.png" alt="pic_d55fcdcb.png"></p></li></ol><h3 id="安装-OpenResty-和-PostgreSQL"><a href="#安装-OpenResty-和-PostgreSQL" class="headerlink" title="安装 OpenResty 和 PostgreSQL"></a>安装 OpenResty 和 PostgreSQL</h3><p>在 1Panel 左侧导航栏 <code>应用商店</code> 搜索安装 OpenResty 和 PostgreSQL 用于反代和数据库<br><img src="https://api.smain.cn/pics/pic_729707c7.png" alt="pic_729707c7.png"><br><img src="https://api.smain.cn/pics/pic_3611a9fe.png" alt="pic_3611a9fe.png"></p><h3 id="反向代理连接后台"><a href="#反向代理连接后台" class="headerlink" title="反向代理连接后台"></a>反向代理连接后台</h3><p>在 1Panel 左侧导航栏 <code>网站</code> - <code>创建网站</code> - <code>反向代理</code> 添加CMS后台端口和站点端口。<br><img src="https://api.smain.cn/pics/pic_f8a8e989.png" alt="pic_f8a8e989.png"><br><img src="https://api.smain.cn/pics/pic_40a3f146.png" alt="pic_40a3f146.png"><br>根据需要自行开启 HTTPS 等。</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>访问后台域名：<br><img src="https://api.smain.cn/pics/pic_dbf75799.png" alt="pic_dbf75799.png"><br><img src="https://api.smain.cn/pics/pic_00bc97c0.png" alt="pic_00bc97c0.png"><br>访问前台域名（需要自行添加内容）<br><img src="https://api.smain.cn/pics/pic_ba9a9e91.png" alt="pic_ba9a9e91.png"><br>自此安装完毕。</p>]]></content>
      
      
      <categories>
          
          <category> 安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 1plane </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将本地数据备份到远程NAS服务器</title>
      <link href="/2024/10/23/%E5%B0%86%E6%9C%AC%E5%9C%B0%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD%E5%88%B0%E8%BF%9C%E7%A8%8BNAS%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2024/10/23/%E5%B0%86%E6%9C%AC%E5%9C%B0%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD%E5%88%B0%E8%BF%9C%E7%A8%8BNAS%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>rsync 和 sshpass 备份命令，适用于将数据备份到远程服务器 <a href="mailto:&#x6e;&#97;&#x73;&#64;&#49;&#x39;&#50;&#46;&#49;&#x36;&#x38;&#x2e;&#56;&#x38;&#46;&#56;">&#x6e;&#97;&#x73;&#64;&#49;&#x39;&#50;&#46;&#49;&#x36;&#x38;&#x2e;&#56;&#x38;&#46;&#56;</a>。这些命令已经用 bash 标记，可以方便地保存到 Hexo。</p><h1 id="1-将本地数据备份到远程NAS服务器"><a href="#1-将本地数据备份到远程NAS服务器" class="headerlink" title="1. 将本地数据备份到远程NAS服务器"></a>1. 将本地数据备份到远程NAS服务器</h1><p>rsync -av &#x2F;local&#x2F;directory&#x2F; <a href="mailto:&#110;&#x61;&#x73;&#x40;&#x31;&#x39;&#x32;&#x2e;&#49;&#54;&#56;&#46;&#x38;&#56;&#x2e;&#x38;">&#110;&#x61;&#x73;&#x40;&#x31;&#x39;&#x32;&#x2e;&#49;&#54;&#56;&#46;&#x38;&#56;&#x2e;&#x38;</a>:&#x2F;remote&#x2F;directory&#x2F;</p><h1 id="2-使用-Rsync-协议备份到远程共享"><a href="#2-使用-Rsync-协议备份到远程共享" class="headerlink" title="2. 使用 Rsync 协议备份到远程共享"></a>2. 使用 Rsync 协议备份到远程共享</h1><p>rsync -av &#x2F;local&#x2F;directory&#x2F; <a href="mailto:&#110;&#x61;&#x73;&#64;&#x31;&#x39;&#50;&#x2e;&#49;&#54;&#56;&#46;&#56;&#x38;&#x2e;&#56;">&#110;&#x61;&#x73;&#64;&#x31;&#x39;&#50;&#x2e;&#49;&#54;&#56;&#46;&#56;&#x38;&#x2e;&#56;</a>::remote_share</p><h1 id="3-使用-sshpass-实现自动备份（避免手动输入密码）"><a href="#3-使用-sshpass-实现自动备份（避免手动输入密码）" class="headerlink" title="3. 使用 sshpass 实现自动备份（避免手动输入密码）"></a>3. 使用 sshpass 实现自动备份（避免手动输入密码）</h1><p>sshpass -p ‘your_password’ rsync -av &#x2F;local&#x2F;directory&#x2F; <a href="mailto:&#110;&#97;&#x73;&#x40;&#x31;&#57;&#50;&#46;&#49;&#x36;&#x38;&#46;&#x38;&#56;&#x2e;&#56;">&#110;&#97;&#x73;&#x40;&#x31;&#57;&#50;&#46;&#49;&#x36;&#x38;&#46;&#x38;&#56;&#x2e;&#56;</a>:&#x2F;remote&#x2F;directory&#x2F;</p><h1 id="4-镜像同步本地和远程目录（包含增删改同步）"><a href="#4-镜像同步本地和远程目录（包含增删改同步）" class="headerlink" title="4. 镜像同步本地和远程目录（包含增删改同步）"></a>4. 镜像同步本地和远程目录（包含增删改同步）</h1><p>rsync -av –delete &#x2F;local&#x2F;directory&#x2F; <a href="mailto:&#110;&#x61;&#115;&#x40;&#49;&#57;&#50;&#46;&#49;&#54;&#56;&#x2e;&#x38;&#x38;&#46;&#x38;">&#110;&#x61;&#115;&#x40;&#49;&#57;&#50;&#46;&#49;&#54;&#56;&#x2e;&#x38;&#x38;&#46;&#x38;</a>:&#x2F;remote&#x2F;directory&#x2F;</p><h1 id="5-从远程服务器拉取数据到本地"><a href="#5-从远程服务器拉取数据到本地" class="headerlink" title="5. 从远程服务器拉取数据到本地"></a>5. 从远程服务器拉取数据到本地</h1><p>rsync -av <a href="mailto:&#x6e;&#x61;&#x73;&#x40;&#x31;&#57;&#x32;&#x2e;&#x31;&#54;&#x38;&#46;&#x38;&#x38;&#x2e;&#x38;">&#x6e;&#x61;&#x73;&#x40;&#x31;&#57;&#x32;&#x2e;&#x31;&#54;&#x38;&#46;&#x38;&#x38;&#x2e;&#x38;</a>:&#x2F;remote&#x2F;directory&#x2F; &#x2F;local&#x2F;directory&#x2F;</p><h1 id="6-定期备份命令-crontab-方式，自动定时执行"><a href="#6-定期备份命令-crontab-方式，自动定时执行" class="headerlink" title="6. 定期备份命令 (crontab 方式，自动定时执行)"></a>6. 定期备份命令 (crontab 方式，自动定时执行)</h1><h1 id="例如：每天凌晨2点进行备份"><a href="#例如：每天凌晨2点进行备份" class="headerlink" title="例如：每天凌晨2点进行备份"></a>例如：每天凌晨2点进行备份</h1><h1 id="编辑crontab文件："><a href="#编辑crontab文件：" class="headerlink" title="编辑crontab文件："></a>编辑crontab文件：</h1><p>crontab -e</p><h1 id="添加以下行以自动执行："><a href="#添加以下行以自动执行：" class="headerlink" title="添加以下行以自动执行："></a>添加以下行以自动执行：</h1><p>0 2 * * * sshpass -p ‘your_password’ rsync -av &#x2F;local&#x2F;directory&#x2F; <a href="mailto:&#x6e;&#97;&#x73;&#x40;&#x31;&#57;&#x32;&#x2e;&#x31;&#x36;&#x38;&#46;&#56;&#x38;&#46;&#x38;">&#x6e;&#97;&#x73;&#x40;&#x31;&#57;&#x32;&#x2e;&#x31;&#x36;&#x38;&#46;&#56;&#x38;&#46;&#x38;</a>:&#x2F;remote&#x2F;directory&#x2F;</p><p>这些命令经过整理可以轻松使用，并可以直接保存到你的 Hexo 项目中。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>群晖使用docker部署joplin</title>
      <link href="/2024/10/23/%E7%BE%A4%E6%99%96%E4%BD%BF%E7%94%A8docker%E9%83%A8%E7%BD%B2joplin/"/>
      <url>/2024/10/23/%E7%BE%A4%E6%99%96%E4%BD%BF%E7%94%A8docker%E9%83%A8%E7%BD%B2joplin/</url>
      
        <content type="html"><![CDATA[<p>#群晖使用docker部署joplin</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  db:</span><br><span class="line">    image: postgres:15</span><br><span class="line">    volumes:</span><br><span class="line">      - /volume1/docker/joplin:/var/lib/postgresql/data</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    environment:</span><br><span class="line">      - POSTGRES_PASSWORD=joplin</span><br><span class="line">      - POSTGRES_USER=joplin</span><br><span class="line">      - POSTGRES_DB=joplin</span><br><span class="line"></span><br><span class="line">  app:</span><br><span class="line">    image: joplin/server:latest</span><br><span class="line">    depends_on:</span><br><span class="line">      - db</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;22300:22300&quot;</span></span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    environment:</span><br><span class="line">      - APP_PORT=22300</span><br><span class="line">      - APP_BASE_URL=http://192.168.88.8:22300</span><br><span class="line">      - DB_CLIENT=pg</span><br><span class="line">      - POSTGRES_PASSWORD=joplin</span><br><span class="line">      - POSTGRES_DB=joplin</span><br><span class="line">      - POSTGRES_USER=joplin</span><br><span class="line">      - POSTGRES_PORT=5432</span><br><span class="line">      - POSTGRES_HOST=db</span><br></pre></td></tr></table></figure><p>#密码<br>admin@localhost<br>admin</p>]]></content>
      
      
      <categories>
          
          <category> Synogoly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 群晖使用docker部署joplin </tag>
            
            <tag> NAS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>G-Box 安装使用说明</title>
      <link href="/2024/10/23/G-Box-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"/>
      <url>/2024/10/23/G-Box-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<h2 id="G-Box-安装使用说明"><a href="#G-Box-安装使用说明" class="headerlink" title="G-Box 安装使用说明"></a>G-Box 安装使用说明</h2><p>在需要安装 G-Box 的设备上，使用 SSH 工具登录到其命令控制台，执行以下一键脚本。在主菜单中选择 <code>5</code>，并根据引导完成安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c <span class="string">&quot;<span class="subst">$(curl -sSLf https://ailg.ggbond.org/xy_install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><p>备用脚本</p><p>如果上面的脚本无法使用，可以尝试以下备用脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c <span class="string">&quot;<span class="subst">$(curl -sSLf https://gbox.ggbond.org/xy_install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c <span class="string">&quot;<span class="subst">$(curl -sSLf https://xy.ggbond.org/xy/xy_install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 一键脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> G-Boxx </tag>
            
            <tag> 安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NewPost</title>
      <link href="/2024/10/22/%E6%96%B0%E7%9A%84%E6%96%87%E7%AB%A0/"/>
      <url>/2024/10/22/%E6%96%B0%E7%9A%84%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 技术类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 标签1 </tag>
            
            <tag> 标签2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/10/20/hello-world/"/>
      <url>/2024/10/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
